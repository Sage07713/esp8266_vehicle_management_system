#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <Wire.h>
#include <Adafruit_BMP085.h>
#include <DHT.h>
#include <TinyGPS++.h>
#include <SoftwareSerial.h>


const char* ssid = "WIFI_SSID";
const char* password ="WIFI_PASSWORD";
const char* mqtt_server = "broker.hivemq.com"; 

WiFiClient espClient;
PubSubClient client(espClient);


#define DHTPIN D5
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

Adafruit_BMP085 bmp;
TinyGPSPlus gps;
SoftwareSerial gpsSerial(D6, D7); 


#define MPU_ADDR 0x68
int16_t ax, ay, az, gx, gy, gz;


unsigned long lastSend = 0;
const unsigned long interval = 5000; 

void setup() {
  Serial.begin(115200);
  gpsSerial.begin(9600);
  Wire.begin();

  dht.begin();
  bmp.begin();

  // MPU init
  Wire.beginTransmission(MPU_ADDR);
  Wire.write(0x6B); Wire.write(0);
  Wire.endTransmission(true);

  WiFi.begin(ssid, password);
  reconnectWiFi();

  client.setServer(mqtt_server, 1883);
}

void loop() {
  if (!client.connected()) reconnectMQTT();
  client.loop();

  while (gpsSerial.available() > 0) gps.encode(gpsSerial.read());

  if (millis() - lastSend > interval) {
    lastSend = millis();

    float tempDHT = dht.readTemperature();
    float humDHT = dht.readHumidity();
    float tempBMP = bmp.readTemperature();
    float pressure = bmp.readPressure() / 100.0F;

    Wire.beginTransmission(MPU_ADDR);
    Wire.write(0x3B); Wire.endTransmission(false);
    Wire.requestFrom(MPU_ADDR, 14, true);
    ax = Wire.read() << 8 | Wire.read();
    ay = Wire.read() << 8 | Wire.read();
    az = Wire.read() << 8 | Wire.read();
    gx = Wire.read() << 8 | Wire.read();
    gy = Wire.read() << 8 | Wire.read();
    gz = Wire.read() << 8 | Wire.read();

    String payload = "{";
    payload += "\"temp_dht\":" + String(tempDHT, 1) + ",";
    payload += "\"hum\":" + String(humDHT, 1) + ",";
    payload += "\"temp_bmp\":" + String(tempBMP, 1) + ",";
    payload += "\"pressure\":" + String(pressure, 1) + ",";
    payload += "\"acc\":[" + String(ax) + "," + String(ay) + "," + String(az) + "],";
    payload += "\"gyro\":[" + String(gx) + "," + String(gy) + "," + String(gz) + "],";

    if (gps.location.isValid()) {
      payload += "\"lat\":" + String(gps.location.lat(), 6) + ",";
      payload += "\"lon\":" + String(gps.location.lng(), 6);
    } else {
      payload += "\"lat\":null,\"lon\":null";
    }

    payload += "}";

    client.publish("vehicle/data", payload.c_str());
    Serial.println(payload);
  }
}

void reconnectWiFi() {
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("WiFi connected");
}

void reconnectMQTT() {
  while (!client.connected()) {
    if (client.connect("ESP8266Client")) {
      client.subscribe("vehicle/control");
    } else {
      delay(2000);
    }
  }
}
